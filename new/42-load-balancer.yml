kind: LoadBalancer
apiVersion: apim.ibm.com/v1
metadata:
  name: "invoke-single-backend"
  version: 1.0
  namespace: sample
spec:
    # Input and Output elements below are used to set the request and response context that will be used when involving the backend. 
    # Default request and response context will be used, if none is specified.  Different contexts can be set by specifying the context name. 
    # Any modifications to the context (changing the header, payload etc) are done using the transformation policies
    input : request # optional to set the request for the invoke
    output : response # optional to store response for the invoke
    roundRobinHttp:
       verb: "GET"
       endpoints:
          - endpoint:
              name: 'endpoint_1'
              tlsClientProfile: some_tls_profile
              url: 'https://localhost:3000'
              urlType: ''      
              version: HTTP/1.0 # HTTP/1.1, HTTP/2
              timeout: 60
              compression: false
              chunkedUploads: false
              persistentConnection: true
            suspendTimeout: 300
          - endpoint:
              name: 'endpoint_2'
              tlsClientProfile: some_tls_profile
              url: 'https://localhost:4000'
              urlType: ''      
              version: HTTP/1.0 # HTTP/1.1, HTTP/2
              timeout: 60
              compression: false
              chunkedUploads: false
              persistentConnection: true
              suspendTimeout: 300
            suspendTimeout: 300
    extensions:
      webm-gateway:
        apiVersion: api.ibm.com/v1
        spec:
          endpoints:
              - name: 'endpoint_1'
                connectionTimeout: 2000
                sslConfig:
                  keyStoreAlias: ""
                  keyAlias: ""
                  trustStoreAlias: ""
                serviceRegistryParameters:
                  - name: ""
                    value: ""
              - name: 'endpoint_2'
                connectionTimeout: 2000
                sslConfig:
                  keyStoreAlias: ""
                  keyAlias: ""
                  trustStoreAlias: ""
                serviceRegistryParameters:
                  - name: ""
                    value: ""


