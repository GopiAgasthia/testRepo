#
# Copyright Super iPaaS Integration LLC, an IBM Company 2024
#

# (1/5) Conditional routing
kind: Route
apiVersion: api.ibm.com/v1
metadata:
  name: "my-conditional-routing"
spec:
  default-endpoint:
    $ref: default_endpoint # refer: 29-http-endpoint.yml
  conditional-endpoints:
    - condition: "(${request.httpMethod} equals POST) or (${request.headers.name} notEquals ${request.payload.jsonPath[$.customer.name]})"
 # other operators include Equals, Equals ignore case, Not equals, Not equals ignore case, Contains, Not Contains, Exists, Not Exists, IP Range, Greater Than, Lesser Than
      endpoint:
        $ref: "endpoint_sample" # refer: 29-http-endpoint.yml

---
#(2/5)Content based routing
kind: Route
apiVersion: api.webmethods.io/beta
metadata:
  name: contentBasedRouting
  version: 1.0
  namespace: sample
spec:
  default-endpoint:
    $ref: default_endpoint
  content-based-endpoints:
    - payloadIdentifier:
        #(1/3)
        jPath: '$.customer.name'
        #(2/3)
        #xpath: '$.customer.id'
        #namespaces:
        #  - prefix: ''
        #    URI: ''
        #(3/3)
        #regex: '$.customer.name'
      endpoint:
        $ref: content_based_endpoint:1.0

        
---
#(3/5)Dynamic routing
kind: Route
apiVersion: api.webmethods.io/beta
metadata:
  name: "dynamic-routing"
  version: 1.0
  namespace: sample
spec:
  default-endpoint:
    $ref: default_endpoint
  dynamic-endpoints:
    useHeader:
      name: sample
      $ref: dynamic_endpoint
    useContext:
      $ref: dynamic_endpoint

---
#(4/5) Mock routing
kind: Route
apiVersion: api.webmethods.io/beta
metadata:
  name: api-mock-route
  description:
  version: 1.0
  namespace: sample
  tags:
    - mock
spec:
  mock-endpoint:
    enabled: true
    $ref: sample:api_mock:1.0 # refer 31-mock-endpoint
---
#(5/5) Message Config Routing
kind: Route
apiVersion: api.webmethods.io/beta
metadata:
  name: jmq-routing
  namespace: PetstoreProject
  version: '1.0'
  tags: []
spec:
  messageConfig:
    $ref: default:MessageConfig-lzi563:1.0
