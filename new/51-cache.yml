kind: cache
apiVersion: api.webmethods.io/beta
metadata:
  name: "cache-invoke"
  version: 1.0
  namespace: sample
spec:
  inputs: #used as identifiers, are not used to produce the cached results - similar to CacheCriteria in webM
    - message: # Use the whole message as an identifier
        name: request
    - messageBody: # Use the value of the specified body as an identifier
        name: message-2 #is an explicit parse needed
    - messageHeader: # Use the value of the specified header as an identifier
        messageName: request
        headerName: header-1
    - variable: # Use the value of the specified variable as an identifier
        name: myInVar
    - custom: # Can be any jsonata expr referencing values from the context
        expression: "$queryParameter('request', 'query-param-1')" 
  outputs: #the context variables that will be cached, the execute block must produce this values, or an error will be thrown in runtime
    - message: # cache the whole message
          name: response
    - messageBody: # Cache the specified message body
          name: response
    - variable: # Cache the specified variable
        name: myOutVar
    - messageHeader: # Cache the specified message header
        messageName: response
        headerName: my-header
  scope: #optional -> used as prefix for the cache identifier, e.g. maybe a long lived common cache might need to be used accross APIs
  expire:
    static: #also fromMessageHeader, fromVariable
      seconds: 30
  execute:
    - $ref: sample:invoke-backend-service:1.0