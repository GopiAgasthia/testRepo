--- #Transform message
kind: Transform
apiVersion: api.webmethods.io/beta
metadata:
  name: "transform-request"
  version: 1.0
  namespace: sample
spec:
  message:
    messageName: request
    uri:
      jsonataTransformers: #no capture, only strings for replace expressions
          - "$replace($, 'trace=true', 'trace='&$variable('my-custom-var')"
      regexTransformers:
        - pattern: "my\\.api\\.com"
          replace: "api.example.org"
        - pattern: "my\\.api\\.com"
          replace: "api.example.org"
    headers:
      headerNames:
        - "my-header-1"
        - "my-header-2"
      jsonataTransformers: #no capture, only strings for replace expressions
        - "$replace($, 'token-prefix', $variable('my-prefix-var')"
      regexTransformers:
        - pattern: "team\/marketing"
          repalce: "team/internal"
    body:
      jsonataTransformers: # json payload
        - capture: "$.books[0].author"
          transform: "$variable('my-author-var')" #can use context vars

--- # plaintext payload, tranform with regex (no context variables accessible)
kind: Transform
apiVersion: api.webmethods.io/beta
metadata:
  name: "transform-request"
  version: 1.0
  namespace: sample
spec:
  message:
    messageName: request
    body:
      regexTransformers:
        - pattern: '([\w\.-]+)@my-company\.com$'
          replace: '$1@my-new-company.com'
        - pattern: '2024'
          replace: '2025'

--- # plaintext payload, transform with jsonata with no capture (context variables accessible)
kind: Transform
apiVersion: api.webmethods.io/beta
metadata:
  name: "transform-request"
  version: 1.0
  namespace: sample
spec:
  message:
    messageName: request
    body:
      jsonataTransformers:
        - transform: $replace($, /([\w\.-]+)@my-company\.com$/, $variable('my-company-domain')) #using a variable
        - transform: $replace($, '2024', $variable('my-year-var'))
--- # json variable
kind: Transform
apiVersion: api.webmethods.io/beta
metadata:
  name: "transform-var-jsonata"
  version: 1.0
  namespace: sample
spec:
  variable: #same for distributedVariable
    name: my-var-1
    jsonataTransformers:
      - capture: "$.books[0].author"
        transform: "$variable('my-author-var')" #can use context vars
      - capture: "$.books[1].stock"
        transform: "0"

--- #plaintext variable, transform with regex
kind: Transform
apiVersion: api.webmethods.io/beta
metadata:
  name: "transform-var"
  version: 1.0
  namespace: sample
spec:
  variable: #same for distributedVariable
    name: my-var-2
    regexTransformers:
      - pattern: '([\w\.-]+)@my-company\.com$'
        replace: '$1@my-new-company.com'
      - pattern: '2024'
        replace: '2025'

--- #plaintext variable, transform with jsonata with no capture
kind: Transform
apiVersion: api.webmethods.io/beta
metadata:
  name: "transform-var"
  version: 1.0
  namespace: sample
spec:
  variable: #same for distributedVariable
    name: my-var-2
    jsonataTransformers:
      - transform: $replace($, /([\w\.-]+)@my-company\.com$/, $variable('my-company-domain')) #using a variable
      - transform: $replace($, '2024', $variable('my-year-var'))